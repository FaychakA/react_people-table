{"version":3,"sources":["components/HomePage/HomePage.tsx","components/THead/THead.tsx","components/TBody/TBody.tsx","components/PeoplePage/PeoplePage.tsx","API.ts","App.tsx","index.tsx"],"names":["HomePage","className","tHead","THead","useState","sortOrder","setSortOrder","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","map","param","key","type","ClassNames","head__button__active","get","onClick","set","push","toString","TBody","person","id","body__male","sex","body__female","pathname","slug","name","born","died","Math","ceil","motherName","fatherName","PeoplePage","React","memo","people","query","setQuery","lowerQuery","toLowerCase","useEffect","applyQuery","useCallback","debounce","queryDebounce","delete","visiblePeople","useMemo","filter","includes","value","onChange","target","peopleFromServer","fetch","then","response","json","App","setPeople","result","index","age","century","mather","find","el","father","sort","a","b","localeCompare","reverse","to","path","exact","component","render","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b05fdec5.chunk.js","sourcesContent":["import React from 'react';\nimport './HomePage.css';\n\nconst HomePage = () => {\n  return (\n    <div>\n      <h1 className=\"head-home\">\n        Welcome to Home Page\n      </h1>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport './THead.scss';\nimport ClassNames from 'classnames';\n\nconst tHead: string[] = [\n  'id',\n  'name',\n  'sex',\n  'born',\n  'died',\n  'age',\n  'century',\n  'mother',\n  'father',\n];\n\nconst THead = () => {\n  const [sortOrder, setSortOrder] = useState('');\n  const history = useHistory();\n  const location = useLocation();\n\n  const searchParams = new URLSearchParams(location.search);\n\n\n  return (\n    <thead>\n      <tr>\n        {tHead.map(param => (\n          <th\n            key={param}\n            className=\"head__cell\"\n          >\n            <button\n              type=\"button\"\n              className={ClassNames(\n                'head__button',\n                { head__button__active: searchParams.get('sortBy') === param },\n              )}\n              onClick={() => {\n                searchParams.set('sortBy', param);\n                if (searchParams.get('sortOrder') === 'asc'\n                  && searchParams.get('sortBy') === sortOrder) {\n                  searchParams.set('sortOrder', 'desc');\n                } else {\n                  searchParams.set('sortOrder', 'asc');\n                }\n\n                history.push({\n                  search: searchParams.toString(),\n                });\n                setSortOrder(param);\n              }}\n            >\n              {searchParams.get('sortBy') === param ? `${param}*` : param}\n            </button>\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n\nexport default THead;\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport ClassNames from 'classnames';\nimport './TBody.scss';\n\ntype Props = {\n  person: PersonWithParents;\n};\n\nconst TBody: React.FC<Props> = ({ person }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  return (\n    <tr className=\"body\">\n      <td\n        className=\"body__cell\"\n      >\n        {person.id}\n      </td>\n      <td\n        className={ClassNames(\n          'body__cell',\n          {\n            body__male: person.sex === 'm',\n            body__female: person.sex === 'f',\n          },\n        )}\n      >\n        <button\n          type=\"button\"\n          className=\"body__button\"\n          onClick={() => {\n            history.push({\n              pathname: `/people/${person.slug}`,\n              search: location.search,\n            });\n          }}\n        >\n          {person.name}\n        </button>\n      </td>\n      <td className={ClassNames(\n        'body__cell',\n        {\n          body__male: person.sex === 'm',\n          body__female: person.sex === 'f',\n        },\n      )}\n      >\n        {person.sex}\n      </td>\n      <td className=\"body__cell\">\n        {person.born}\n      </td>\n      <td className=\"body__cell\">\n        {person.died}\n      </td>\n      <td\n        className={ClassNames(\n          'body__cell',\n        )}\n      >\n        {person.died - person.born}\n      </td>\n      <td className=\"body__cell\">\n        {Math.ceil(person.died / 100)}\n      </td>\n      <td\n        className={ClassNames(\n          'body__cell',\n          {\n            body__female: person.motherName,\n          },\n        )}\n      >\n        {person.motherName ? person.motherName : '-//-'}\n      </td>\n      <td\n        className={ClassNames(\n          'body__cell',\n          {\n            body__male: person.fatherName,\n          },\n        )}\n      >\n        {person.fatherName ? person.fatherName : '-//-'}\n      </td>\n    </tr>\n  );\n};\n\nexport default TBody;\n","import React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport debounce from 'lodash.debounce';\nimport THead from '../THead/THead';\nimport TBody from '../TBody/TBody';\nimport './PeoplePage.scss';\n\ntype Props = {\n  people: PersonWithParents[];\n};\n\nconst PeoplePage: React.FC<Props> = React.memo(\n  ({ people }) => {\n    const [query, setQuery] = useState('');\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const searchParams = new URLSearchParams(location.search);\n    const lowerQuery = (searchParams.get('query') || '').toLowerCase();\n\n    useEffect(() => {\n      setQuery(lowerQuery);\n    }, [lowerQuery]);\n\n    const applyQuery = useCallback(\n      debounce((queryDebounce: string) => {\n        if (queryDebounce) {\n          searchParams.set('query', queryDebounce);\n        } else {\n          searchParams.delete('query');\n        }\n\n        history.push({ search: searchParams.toString() });\n      }, 500),\n      [],\n    );\n\n    const visiblePeople = useMemo(\n      () => people.filter(({ name, motherName, fatherName }) => (name + motherName + fatherName)\n        .toLowerCase().includes(lowerQuery)),\n      [lowerQuery, people],\n    );\n\n    return (\n      <div className=\"peoplePage\">\n        <h1 className=\"peoplePage__head\">People Table</h1>\n\n        <input\n          type=\"text\"\n          value={query}\n          onChange={({ target }) => {\n            setQuery(target.value);\n            applyQuery(target.value);\n          }}\n          className=\"peoplePage__input\"\n        />\n\n        <table className=\"peoplePage__wrapper\">\n          <THead />\n\n          <tbody>\n            {visiblePeople.map(person => (\n              <TBody\n                person={person}\n                key={person.id}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  },\n);\n\nexport default PeoplePage;\n","const apiUrl = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const peopleFromServer = fetch(apiUrl)\n  .then((response): Promise<Person[]> => response.json());\n","import React, { useState, useEffect, useMemo } from 'react';\nimport {\n  NavLink, Route, Switch, Redirect, useLocation,\n} from 'react-router-dom';\n\nimport './App.css';\nimport HomePage from './components/HomePage/HomePage';\nimport PeoplePage from './components/PeoplePage/PeoplePage';\nimport { peopleFromServer } from './API';\n\nconst App = () => {\n  const [people, setPeople] = useState<PersonWithParents[]>([]);\n\n  useEffect(() => {\n    peopleFromServer.then(result => (\n      setPeople(result.map((person: Person, index: number) => ({\n        id: index + 1,\n        ...person,\n        age: person.died - person.born,\n        century: Math.ceil(person.died / 100),\n        mather: result.find(el => person.motherName === el.name),\n        father: result.find(el => person.fatherName === el.name),\n      })))\n    ));\n  }, []);\n\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n\n  useMemo(() => {\n    switch (searchParams.get('sortBy')) {\n      case 'id':\n        people.sort((a, b) => a.id - b.id);\n        break;\n      case 'name':\n        people.sort((a, b) => a.name.localeCompare(b.name));\n        break;\n      case 'sex':\n        people.sort((a, b) => a.sex.localeCompare(b.sex));\n        break;\n      case 'born':\n        people.sort((a, b) => a.born - b.born);\n        break;\n      case 'died':\n        people.sort((a, b) => a.died - b.died);\n        break;\n      case 'age':\n        people.sort((a, b) => a.age - b.age);\n        break;\n      case 'century':\n        people.sort((a, b) => a.century - b.century);\n        break;\n      case 'mother':\n        people.sort((a, b) => (a.motherName || '').localeCompare((b.motherName || '')));\n        break;\n      case 'father':\n        people.sort((a, b) => (a.fatherName || '').localeCompare((b.fatherName || '')));\n        break;\n      default:\n        setPeople(people);\n        break;\n    }\n\n    if (searchParams.get('sortOrder') === 'desc') {\n      people.reverse();\n    }\n\n    setPeople([...people]);\n  }, [location.search]);\n\n\n  return (\n    <div className=\"app\">\n      <nav className=\"nav\">\n        <ul className=\"nav__list\">\n          <li className=\"nav__item\">\n            <NavLink to=\"/\" className=\"nav__link\">\n              Home Page\n            </NavLink>\n          </li>\n\n          <li className=\"nav__item\">\n            <NavLink to=\"/people\" className=\"nav__link\">\n              People Page\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n\n        <Route\n          path=\"/people:name?\"\n          render={() => (\n            <PeoplePage people={people} />\n          )}\n        />\n\n        <Redirect\n          from=\"/home\"\n          to=\"/\"\n        />\n\n        <h1 className=\"pageNotFound\">Page not found</h1>\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}